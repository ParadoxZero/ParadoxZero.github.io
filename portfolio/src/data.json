{
    "name": "Sidhin S Thomas",
    "profile": "C++ developer, system software enthusiast. In search of novel problems to solve. Browser developer working on Microsoft Edge. Main tech stack is C++, , React, Python. Work with Python on automation and scripting. Have experience developing enterprise solutions using ASP dot net core.",
    "picUrl": "./profile-pic.jpg",
    "sections": [
        {
            "header": "Overview",
            "content": [
                "Problem solver by nature. I extract a great deal of joy from being able to build different things, rogramming is both my passion and a hobby.",
                "I started my journey in fifth grade when I first “hacked” Age of empires. That’s when I started seeing computers as more than a game console. In eight grade, from an example VB.NET program in my textbook, I learned the \"what\" of programming. With the Visual studio's help section, created lot’s of simple prank apps. That’s when I decided this is what I want to do in life.",
                "First remarkable thing I wrote up was a gravity simulator using BGI graphics and of TurboC++. You could throw balls here and there, it will always falls according to the gravity laws, animated by rendering each frame using the BGI API. That was around in middle of 11th grade.",
                "And now, after the years I have created small games, worked on Operating Systems, OS shell, Built OS APIs, worked on Chromium, PDF engines, PDF SDKs, Application SDKs, Win32, Com, WinRT and bunch of other interesting stuff so far.",
                "Apart from the technical stuff, I am a huge travel enthusiast. I love to travel and explore new places, eat new food. I love books. Have a huge collection of it. Mostly informationls like \"Immune System\" by Philipp Dettmer or fictions like the Farseer saga by Robin Hobb.",
                "Life is good and interesting, always on a lookout for the next challenge!"
            ],
            "iconKey": "UserOutlined"
        },
        {
            "header": "Experience",
            "iconKey": "CodeOutlined",
            "content": [
                {
                    "title": "Software Engineer 2 | Microsoft WebVIew2",
                    "timeline": "Dec 2024 - Present",
                    "points": [
                        "Microsoft Windows WebView2 is a windows control/sdk that allows developers to embed web technologies (HTML, CSS, and JavaScript) in native applications. It is based on the Microsoft Edge (Chromium) platform.",
                        "As part of the team, I own bunch of core APIs developers use to integrate WebView2 in their applications.",
                        "Major tech stacks are C++, C#, Win32, Windows SDK, Chromium, WebView2 SDK."
                    ]
                },
                {
                    "title": "Software Engineer 2 | Microsoft Edge - PDF",
                    "timeline": "Jan 2022 - Dec 2024",
                    "points": [
                        "Microsoft Edge PDF Viewer is a feature-rich PDF reader integrated into the Edge browser, enabling users to view, annotate, and interact with PDF documents seamlessly.",
                        "Built features like the support for - Digital Signature Validations in PDFs, XFA (XML Forms Architecture) etc.",
                        "Served as the Accessibility Champ for the team, reviewing and assisting in fixing accessibility issues."
                    ]
                },
                {
                    "title": "Sofftware Engineer 2 | Microsoft Windows Team Edition",
                    "timeline": "Nov 2019 to Jan 2022",
                    "points": [
                        "Microsoft Surface Hub is a digital whiteboard and collaboration device designed for teams to work together in a shared space. It runs on Windows 10 Team Edition, a specialized version of Windows 10 tailored for the Surface Hub hardware.",
                        "My team and I built and owned the Windows 10 Team Edition. We had a custom OS Shell and application SDK.",
                        "I got to own and build multiple critical components like the \"End Session\" and Session Management, Windowing System and parts of the secure boot implementation."
                    ]
                },
                {
                    "title": "Sofftware Engineer | Microsoft HR Data Insights",
                    "timeline": "Jan 2019 - Nov 2019",
                    "points": [
                        "HR Data Insights team handled the BI Data Lake used accross Microsoft for People data. Built using technologies like Azure Data Factory, Azure Data Bricks, Azure Data Lake, etc.",
                        "Other than the usual ETL, I also built the access management system for the data lake. A way for consumers to request access, grant them access etc.",
                        "Success of the Access Management system, resulted in it being adopted by other BI teams in Microsoft."
                    ]
                },
                {
                    "title": "Sofftware Engineer | Microsoft Digital Crimes Unit - FAME (tool)",
                    "timeline": "Aug 2018 - Dec 2018",
                    "points": [
                        "Digital Crimes Unit was part of Corporate Functions Engineering. Building Line of buisness applications for Microsoft's Lawyer team.",
                        "Worked of a tool called FAME - Forensic Analysis and Management Engine. Built using ASP.NET Core, Azure Cosmos DB, App Service, etc."
                    ]
                }
            ]
        },
        {
            "header": "Education",
            "iconKey": "BookOutlined",
            "content": [
                {
                    "header": "Bachelors Degree",
                    "course": "B. Tech Computer Science and Engineering",
                    "school": "Rajiv Gandhi Institute of Technology, Kottayam",
                    "timeline": "2014 - 2018"
                },
                {
                    "header": "High School",
                    "course": "Central Board of Secondary Education",
                    "school": "St. Gregorios School, Dwarka"
                }
            ]
        },
        {
            "header": "Projects",
            "iconKey": "BulbOutlined",
            "content": [
                {
                    "type": "publication",
                    "title": "An Intelligent Adaptive Scheduler for Operating Systems",
                    "tags": [
                        "publication",
                        "operating-system",
                        "os-scheduler"
                    ],
                    "description": "Created an adaptive scheduling algorithm based on Ant Colony Optimisation for operating system process scheduling. It was implemented on FreeRTOS and empirically measured the performance.",
                    "DOI": "10.1109/ICCONS.2018.8662927",
                    "conference": "2018 Second International Conference on Intelligent Computing and Control Systems (ICICCS)",
                    "abstract": "Traditional scheduling algorithms are insensitive to system changes like load which can reduce the efficiency. In this paper, we present an intelligent Adaptive Scheduling Algorithm for operating systems using Ant Colony Optimization to tackle this issue. Ant colony optimization is an evolutionary algorithm inspired from real-world ant colonies. The scheduler is implemented on FreeRTOS, a popular realtime operating system. Also, the paper shows the empirical study of the implementations performance.",
                    "link": "https://ieeexplore.ieee.org/document/8662927"
                },
                {
                    "type": "github",
                    "title": "paradoxOS - Unix unlike operating system.",
                    "description": "This is an hobbyist Operating System Project currently in very early stage. The design has not been finalized yet, hence no formal design docs is available.",
                    "link": "https://github.com/ParadoxZero/paradoxOS",
                    "readmePath": "README.md",
                    "tags": [
                        "c",
                        "operating-system",
                        "system-software",
                        "os-from-scratch"
                    ]
                },
                {
                    "type": "github",
                    "title": "EnhancedFreeRTOS",
                    "link": "https://github.com/FreeRTOS-AdaptiveScheduling/EnhancedFreeRTOS",
                    "description": "This is a modified version of FreeRTOS kernel with an enhanced scheduler. An adaptive scheduler for the FreeRTOS based on Ant Colony Optimisation.",
                    "readmePath": "README.md",
                    "tags": [
                        "c",
                        "operating-system",
                        "system-software"
                    ]
                },
                {
                    "type": "github",
                    "title": "sfml-snake",
                    "description": "A classic snake game made in C++ using sfml library. This project uses the low level graphics library sfml to generate the game visual and pure C++ for the game controller logic.",
                    "link": "https://github.com/ParadoxZero/sfml-snake",
                    "readmePath": "README.md",
                    "tags": [
                        "c++",
                        "game",
                        "sfml",
                        "low-level"
                    ]
                },
                {
                    "type": "github",
                    "title": "stmp",
                    "description": "Simple macro processor. It will expand MACROs defined in source code. A macro is expandable pre-compilation text shortcuts that can be used to dynamically generate source code.",
                    "link": "https://github.com/ParadoxZero/stmp",
                    "readmePath": "README.md",
                    "tags": [
                        "c",
                        "pre-compiler",
                        "macro-processor",
                        "system-software"
                    ]
                },
                {
                    "type": "github",
                    "title": "Easy Portfolio",
                    "description": "This website. This is totally data driven via JSON. Anyone can clone, fork, update the data entried and have their own personal homepage/ portfolio site up and ready in few minutes.",
                    "link": "https://github.com/ParadoxZero/ParadoxZero.github.io",
                    "readmePath": "README.md",
                    "tags": [
                        "javascript",
                        "react",
                        "web-application",
                        "single-page-app"
                    ]
                }
            ]
        }
    ],
    "socialUrls": {
        "github": "https://github.com/ParadoxZero",
        "instagram": "https://www.instagram.com/the_paradox_zero/",
        "linkedin": "https://www.linkedin.com/in/sidhin/",
        "email": "contact@sidhin.in",
        "phone": "",
        "resume":"https://1drv.ms/b/s!AveqlsGVNX-BhZgyXkk5sJRPtkx-Lg?e=zvB5l3"
    },
    "footer": "Copyright ©️ Sidhin S Thomas"
}
